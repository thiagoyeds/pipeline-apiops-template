name: Build

on:
  push:
    branches:
      - main
      - hml
      - dev

jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v3

      - name: setup cli
        run: |
          mkdir -p build-artifact
          cd build-artifact
          wget -O ssd https://github.com/thiagoyeds/pipeline-apiops-template/raw/dev/ssd
          chmod +x ssd
          ./ssd --help

      - name: save build artifact
        uses: actions/upload-artifact@master
        with:
          name: build-artifact
          path: build-artifact
  deploy:
    name: Deploy Stage
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: download build artifact
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: build-artifact

      - name: run ssd --help
        run: | 
          chmod +x build-artifact/ssd
          ./build-artifact/ssd --help

      - name: load env vars
        run: |
          mkdir -p /home/runner/.sensedia
          echo "{\"default\":{\"output\": \"yaml\",\"token\": \"${{ secrets.SENSEDIA_CLI_TOKEN }}\",\"url\": \"${{ vars.SENSEDIA_CLI_MANAGER_URL }}\"}}" > /home/runner/.sensedia/config.json
          echo "{\"default\":{\"token\":\"${{ secrets.SENSEDIA_CLI_TOKEN  }}\"}}" > /home/runner/.sensedia/.cache.json
          cat /home/runner/.sensedia/config.json
          cat /home/runner/.sensedia/.cache.json

      - name: ssd get environment test connection
        run: ./build-artifact/ssd apim get environment --name "[DEV] Sensedia CLI" --output yaml

      - name: ssd apply crds
        run: find . -not -path "./.github/*" | grep .yaml | xargs -n 1 ./build-artifact/ssd apply -f