name: CI

on:
  push:
    branches:
      - main
      - hml
      - dev

jobs:
  build:
    name: Build Stage
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: filter differences
        run: |
          git diff --name-only ${{ github.event.before }} ${{ github.event.after }} > .diff-files
          cat .diff-files
      # - name: set up ruby 3.0
      #   uses: ruby/setup-ruby@v1
      #   with:
      #     ruby-version: 3.0
      - name: test/lint
        run: bash <(curl -s https://raw.githubusercontent.com/CICDToolbox/yaml-lint/master/pipeline.sh)
      - name: save build artifact
        uses: actions/upload-artifact@master
        with:
          name: build-artifact
          path: .
  deploy:
    name: Deploy Stage
    needs: build
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: download build artifact
        uses: actions/download-artifact@master
        with:
          name: build-artifact
          path: .
      - name: load env vars
        run: |
          mkdir -p /home/runner/.sensedia
          echo "{\"default\":{\"output\": \"yaml\",\"token\": \"${{ secrets.SENSEDIA_CLI_TOKEN }}\",\"url\": \"${{ vars.SENSEDIA_CLI_MANAGER_URL }}\"}}" > /home/runner/.sensedia/config.json
          echo "{\"default\":{\"token\":\"${{ secrets.SENSEDIA_CLI_TOKEN  }}\"}}" > /home/runner/.sensedia/.cache.json
          cat /home/runner/.sensedia/config.json
          cat /home/runner/.sensedia/.cache.json

      - name: setup cli
        run: chmod +x ssd
      #     wget -O ssd \
      #      https://github.com/thiagoyeds/pipeline-apiops-template/raw/dev/ssd
      #     chmod +x ssd
      #     ./ssd --help
      - name: git log
        run: git log

      # - name: ssd apply crds
      #   run: |
      #     find . -not -path "./.github/*" | grep .yaml > .crds-to-apply
      #     echo "all newed/changed CRDs"
      #     cat .crds-to-apply

      #     echo "ssd apply -f in all kind RestAPI (prefix filename 'api-')"
      #     cat .crds-to-apply | grep "api-" | xargs -n 1 ./ssd apply -f

      #     echo "ssd apply -f in all kind Environment (prefix filename 'env-')"
      #     cat .crds-to-apply | grep "env-" | xargs -n 1 ./ssd apply -f

      #     echo "ssd apply -f in all kind Plan (prefix filename 'plan-')"
      #     cat .crds-to-apply | grep "plan-" | xargs -n 1 ./ssd apply -f

      #     echo "ssd apply -f in all kind App (prefix filename 'app-')"
      #     cat .crds-to-apply | grep "app-" | xargs -n 1 ./ssd apply -f

      #     echo "ssd apply -f in all kind ApiEnvironmentLink (prefix filename 'apienvlink-')"
      #     cat .crds-to-apply | grep "apienvlink-" | xargs -n 1 ./ssd apply -f
